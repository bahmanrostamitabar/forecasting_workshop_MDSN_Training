---
title: "Time series patterns/graphics"
execute:
  echo: false
format: html
---

```{r}
#| label: setup
#| include: false
library(feasts)
library(tsibble)
library(readr)
library(tidyverse)
library(lubridate)
library(tsbox)
library(dygraphs)

ambulance_demand_tsb <- read_rds("data/ambulance_demand_tsb.rds")
```

# Lab 2: time series patterns/graphics

## time plot

You can create time plot using `autoplot()` function

```{r}
#| label: ts-plot
ambulance_demand_tsb |> autoplot(demand) # create a time plot of daily data
```

You can use filter_index or head() and tail() to select a subset of time series , try ?filter_index or google it


```{r }
#| label: filter-index
ambulance_demand_tsb |> tsibble::filter_index("2016 Jan") |> autoplot(demand) # plot only February 2016 
ambulance_demand_tsb |> tsibble::filter_index(. ~ "2016-02-01") |> autoplot(demand) # plot from February 2016 till the end
ambulance_demand_tsb |> tsibble::???(???) |> autoplot(demand) # plot from February 2016 till the end
demand_hourly |> tsibble::filter_index(???) |> autoplot(demand) # plot only 2015-01-01
ambulance_demand_tsb |> head(n=100) |> autoplot() # first 100 observations
ambulance_demand_tsb |> tail(n=100) |> autoplot()  # last 100 observations
```

It could be really hard to visualise hourly or daily data, one possibility is to view a portion of the data, you can also use  interactive plots:

```{r}
#| label: daily-demand-dygraph

tsbox::ts_xts(ambulance_demand_tsb) |> 
  dygraph() |> 
  dyRangeSelector(dateWindow = c("2016-01-01", "2016-02-01"))
```


## Seasonal plots

use seasonal and subseries plots to check whether series contain seasonality 

```{r}
#| label: seasonal-plot
ambulance_demand_tsb_total <- ambulance_demand_tsb |> index_by(date) |> summarise(demand = sum(demand))
  ambulance_demand_tsb_total |> 
  feasts::gg_season(demand, period = "week") #seasonal plot
ambulance_demand_tsb |> feasts::gg_subseries(demand, period = "week")# subseries plot

quarterly_ambulance_demand |> feasts::gg_season(demand)

```

Is there any seasonality in the daily time series? 

## autocorrelation plot

```{r}
#| label: acf-calcul
ambulance_demand_tsb_total |>
  feasts::gg_lag(demand, lags = 1:14, geom = "point")# create lag plots for 14 lags, from 1 to 14
ambulance_demand_tsb_total |> feasts::ACF(lag_max = 14)# compute autocorrelation function for 14 lags
```

plot the autocorrelation 

```{r acf-plot}
ambulance_demand_tsb_total |> feasts::ACF(lag_max = 14) |> autoplot()# plot acf
```

You can have a time plot, acf and season plot in one single plot, if you use `gg_tsdisplay()` function

```{r multiple-plot-, options}
ambulance_demand_tsb_total |> gg_tsdisplay(demand, plot_type = "histogram")#
```

You can use ljung box to test whether ACF is significant:

>if p-value is small, << 0.05 then there is a significant autocorrelation:

```{r ljung-box-test}
ambulance_demand_tsb_total |> features(demand, ljung_box)
```

What autocorrelation will tell us? Which key features could be highlighted by ACF?

  